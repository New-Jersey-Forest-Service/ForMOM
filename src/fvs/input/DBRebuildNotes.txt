
Ok so Stand 505 has a tie between 541 and 837, 
837 should be on top


CREATE VIEW STANDINIT_CORES_BY_FT
SELECT STAND_ID, 
	SITE_SPECIES, 
	SITE_INDEX, 
	COUNT(SITE_SPECIES) AS NUM_CORINGS, 
	AVG(SITE_INDEX) AS AVG_SI
FROM FVS_STANDINIT_PLOT 
WHERE SITE_SPECIES > 1 
GROUP BY STAND_ID, 
	SITE_SPECIES




To deal with ties, I can do an inner join and then group by two things



Get the max per species from tree_init and save it into a table

CREATE VIEW TREEINIT_MAX_PER_FT AS
SELECT STAND_ID,
       SPECIES,
       MAX(NUM_SPECIES)
FROM
  (SELECT STAND_ID,
          SPECIES,
          COUNT(SPECIES) AS NUM_SPECIES
   FROM FVS_TREEINIT_PLOT
   GROUP BY STAND_ID,
            SPECIES
	-- Order by is totally optional
   ORDER BY STAND_ID, -NUM_SPECIES)
GROUP BY STAND_ID



Now we do da join :D






lmao this is kinda a lot


Step 1: Extract info from STAND_INIT

-- STANDINIT Table (Used for initial decisions)


-- STANDINIT_CORES_BY_FT just groups entries by the number of entries
-- in a stand_id, which (I believe) corresponds the number of trees cored
DROP VIEW IF EXISTS STANDINIT_CORES_BY_FT;

CREATE VIEW STANDINIT_CORES_BY_FT AS
SELECT STAND_ID, 
	SITE_SPECIES, 
	SITE_INDEX, 
	COUNT(SITE_SPECIES) AS NUM_CORINGS, 
	AVG(SITE_INDEX) AS AVG_SI
FROM FVS_STANDINIT_PLOT
WHERE SITE_SPECIES > 1
GROUP BY STAND_ID, 
	SITE_SPECIES
ORDER BY STAND_ID,
	-NUM_CORINGS
;

DROP VIEW IF EXISTS STANDINIT_MAX_CORES_PER_FT_WITH_TIES;

CREATE VIEW STANDINIT_MAX_CORES_PER_FT_WITH_TIES AS
SELECT ALL_FT.* 
FROM STANDINIT_CORES_BY_FT AS ALL_FT INNER JOIN
   (SELECT STAND_ID, 
		MAX(NUM_CORINGS) AS MAX_CORINGS 
	FROM STANDINIT_CORES_BY_FT
	GROUP BY STAND_ID) AS MAX_PER_FT
ON
	ALL_FT.STAND_ID = MAX_PER_FT.STAND_ID AND
	ALL_FT.NUM_CORINGS = MAX_PER_FT.MAX_CORINGS
;





Step 2: Get the max in tree_init using only the species and plot_ids that exist
in STANDINIT_MAX_CORES_PER_FT_WITH_TIES

-- Tree View (used for tie breaks)

-- Count number of species per stand
DROP VIEW IF EXISTS TREEINIT_NUM_SPECIES_PER_FT;

CREATE VIEW TREEINIT_NUM_SPECIES_PER_FT AS
SELECT TREEINIT.STAND_ID, 
	TREEINIT.SPECIES AS SITE_SPECIES, 
	COUNT(TREEINIT.SPECIES) AS NUM_SPECIES 
FROM FVS_TREEINIT_PLOT AS TREEINIT
GROUP BY TREEINIT.STAND_ID, 
	TREEINIT.SPECIES;

-- Generate table of target num_species
DROP VIEW IF EXISTS TREEINIT_MAX_SPECIES_PER_FT;

CREATE VIEW TREEINIT_MAX_SPECIES_PER_FT AS
SELECT STAND_ID, MAX(NUM_SPECIES) AS MAX_NUM_SPECIES
FROM TREEINIT_NUM_SPECIES_PER_FT INNER JOIN
	STANDINIT_MAX_CORES_PER_FT_WITH_TIES
USING (STAND_ID, SITE_SPECIES)
GROUP BY STAND_ID;



-- Step 3: Use these to get the target tree species per stand


-- \/ \/ This is the table \/ \/
SELECT STAND_ID, SITE_SPECIES
FROM 
	(STANDINIT_MAX_CORES_PER_FT_WITH_TIES NATURAL JOIN TREEINIT_NUM_SPECIES_PER_FT)
		NATURAL JOIN TREEINIT_MAX_SPECIES_PER_FT AS MAX_NUM_SPECIES
;














